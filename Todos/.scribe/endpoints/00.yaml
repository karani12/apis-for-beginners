name: Auth
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Logged out successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/signup
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user'
        required: true
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'The email of the user'
        required: true
        example: krystal.lockman@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password of the user'
        required: true
        example: 'JnS,ssk~`N*g&9biK0s'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: iusto
      email: krystal.lockman@example.org
      password: 'JnS,ssk~`N*g&9biK0s'
      password_confirmation: omnis
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          "data": {
          "id": 1,
          "name": "John Doe",
          "email": "example@mail.com"
          "created_at": "2021-08-12 12:00:00",
          "updated_at": "2021-08-12 12:00:00"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {

          "message": "Invalid login details"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "name": ["The name field is required."],
          "email": ["The email field is required."],
          "password": ["The password field is required."]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user'
        required: true
        example: omurazik@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password of the user'
        required: true
        example: '9_wa{FV]---i,7m}_Vd'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: omurazik@example.com
      password: '9_wa{FV]---i,7m}_Vd'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
          "id": 1,
          "name": "John Doe",
          "email": "jon@example.com"
          "created_at": "2021-08-12 12:00:00",
          "updated_at": "2021-08-12 12:00:00"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {

          "message": "Invalid login details"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "email": ["The email field is required."],
          "password": ["The password field is required."]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/reset-password
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user'
        required: true
        example: donnelly.samson@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password of the user'
        required: true
        example: "6VR'CX"
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      token:
        name: token
        description: 'The token of the user'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user'
        required: true
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: donnelly.samson@example.net
      password: "6VR'CX"
      token: et
      password_confirmation: velit
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Password has been successfully changed"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
          "message": "Invalid token provided"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "email": ["The email field is required."],
          "token": ["The token field is required."],
          "password": ["The password field is required."]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/forgot-password
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Forgot password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user'
        required: true
        example: lcasper@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: lcasper@example.org
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Password reset link sent to your email"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "We can't find a user with that e-mail address."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "email": ["The email field is required."]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
