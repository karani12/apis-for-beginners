openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/auth/logout:
    post:
      summary: 'Logout a user'
      operationId: logoutAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logged out successfully'
                properties:
                  message:
                    type: string
                    example: 'Logged out successfully'
      tags:
        - Auth
      security: []
  /api/auth/signup:
    post:
      summary: 'Register a user'
      operationId: registerAUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "\"data\": {\n\"id\": 1,\n\"name\": \"John Doe\",\n\"email\": \"example@mail.com\"\n\"created_at\": \"2021-08-12 12:00:00\",\n\"updated_at\": \"2021-08-12 12:00:00\"\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login details'
                properties:
                  message:
                    type: string
                    example: 'Invalid login details'
        422:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The given data was invalid.\",\n\"errors\": {\n\"name\": [\"The name field is required.\"],\n\"email\": [\"The email field is required.\"],\n\"password\": [\"The password field is required.\"]\n}"
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user'
                  example: iusto
                email:
                  type: string
                  description: 'The email of the user'
                  example: krystal.lockman@example.org
                password:
                  type: string
                  description: 'The password of the user'
                  example: 'JnS,ssk~`N*g&9biK0s'
                password_confirmation:
                  type: string
                  description: 'The password confirmation of the user'
                  example: omnis
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/auth/login:
    post:
      summary: 'Login a user'
      operationId: loginAUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": {\n\"id\": 1,\n\"name\": \"John Doe\",\n\"email\": \"jon@example.com\"\n\"created_at\": \"2021-08-12 12:00:00\",\n\"updated_at\": \"2021-08-12 12:00:00\"\n}\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login details'
                properties:
                  message:
                    type: string
                    example: 'Invalid login details'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user'
                  example: omurazik@example.com
                password:
                  type: string
                  description: 'The password of the user'
                  example: '9_wa{FV]---i,7m}_Vd'
              required:
                - email
                - password
      security: []
  /api/auth/reset-password:
    post:
      summary: 'Reset password'
      operationId: resetPassword
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password has been successfully changed'
                properties:
                  message:
                    type: string
                    example: 'Password has been successfully changed'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid token provided'
                properties:
                  message:
                    type: string
                    example: 'Invalid token provided'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'The email field is required.'
                    token:
                      - 'The token field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      token:
                        type: array
                        example:
                          - 'The token field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user'
                  example: donnelly.samson@example.net
                password:
                  type: string
                  description: 'The password of the user'
                  example: "6VR'CX"
                token:
                  type: string
                  description: 'The token of the user'
                  example: et
                password_confirmation:
                  type: string
                  description: 'The password confirmation of the user'
                  example: velit
              required:
                - email
                - password
                - token
                - password_confirmation
      security: []
  /api/auth/forgot-password:
    post:
      summary: 'Forgot password'
      operationId: forgotPassword
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset link sent to your email'
                properties:
                  message:
                    type: string
                    example: 'Password reset link sent to your email'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "We can't find a user with that e-mail address."
                properties:
                  message:
                    type: string
                    example: "We can't find a user with that e-mail address."
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user'
                  example: lcasper@example.org
              required:
                - email
      security: []
tags:
  -
    name: Auth
    description: ''
